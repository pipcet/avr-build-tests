DIR 3a8995aac0a42a7561695fc4a1a6a7e1
--- 950922-1.c.{atmega128}.{3}.{vanilla}.s	2020-08-05 18:59:35.411355505 +0000
+++ 950922-1.c.{atmega128}.{3}.{ccmode}.s	2020-08-05 18:59:34.379344936 +0000
@@ -36,244 +36,324 @@
 	push r29
 	in r28,__SP_L__
 	in r29,__SP_H__
-	sbiw r28,50
+	sbiw r28,51
 	in __tmp_reg__,__SREG__
 	cli
 	out __SP_H__,r29
 	out __SREG__,__tmp_reg__
 	out __SP_L__,r28
 /* prologue: function */
-/* frame size = 50 */
-/* stack size = 68 */
-.L__stack_usage = 68
+/* frame size = 51 */
+/* stack size = 69 */
+.L__stack_usage = 69
 	movw r16,r24
-	std Y+47,r22
-	std Y+48,r23
-	movw r14,r20
-	mov r7,__zero_reg__
-	mov r6,__zero_reg__
-	movw r4,r6
-	ldi r18,32
-	and r4,r18
-	clr r5
-	clr r6
-	ldi r19,1
-	and r7,r19
-	ldd r20,Y+37
-	ldd r21,Y+38
-	std Y+44,r21
-	std Y+43,r20
-	ldd r24,Y+35
-	ldd r25,Y+36
-	movw r26,r24
-	adiw r26,1
-	movw r2,r26
-	std Y+46,__zero_reg__
-	std Y+45,__zero_reg__
-	ldi r31,0
-	ldi r30,0
-	adiw r30,4
-	movw r10,r30
+	std Y+41,r22
+	std Y+42,r23
+	ldi r25,0
+	ldi r24,0
+	movw r4,r24
+	clr r4
+	ldi r18,1
+	and r5,r18
+	movw r30,r24
+	andi r30,1
+	clr r31
+	std Y+44,r31
+	std Y+43,r30
+	ldd r10,Y+37
+	ldd r11,Y+38
+	ldd r14,Y+35
+	ldd r15,Y+36
+	ldi r18,lo8(zeroes.0)
+	mov r2,r18
+	ldi r18,hi8(zeroes.0)
+	mov r3,r18
+	ldi r19,lo8(16)
+	mov r8,r19
+	mov r9,__zero_reg__
 .L2:
 	cpi r16,117
 	cpc r17,__zero_reg__
 	brne .+2
-	rjmp .L3
-.L54:
+	rjmp .L8
+.L56:
 	cpi r16,120
 	cpc r17,__zero_reg__
 	brne .+2
-	rjmp .L4
+	rjmp .L8
 	cpi r16,100
 	cpc r17,__zero_reg__
 	brne .+2
-	rjmp .L52
+	rjmp .L49
 .L5:
-	cp r6,__zero_reg__
-	cpc r7,__zero_reg__
+	cp r4,__zero_reg__
+	cpc r5,__zero_reg__
 	breq .L2
 	cpi r16,102
 	cpc r17,__zero_reg__
 	brlt .L2
 .L33:
-	movw r12,r2
-	movw r8,r10
+	movw r12,r14
+	ldi r31,-1
+	sub r12,r31
+	sbc r13,r31
+	movw r18,r6
+	subi r18,-4
+	sbci r19,-1
+	std Y+40,r19
+	std Y+39,r18
 	ldi r18,0
 	ldi r19,0
 	movw r20,r18
-	ldd r22,Y+39
-	ldd r23,Y+40
-	ldd r24,Y+41
-	ldd r25,Y+42
+	movw r24,r20
+	movw r22,r18
 	call __eqsf2
 	tst r24
-	breq .L2
-	ldi r30,lo8(.LC0)
-	ldi r31,hi8(.LC0)
-	ldd r26,Y+45
-	ldd r27,Y+46
-	adiw r26,1
-	st X,r31
-	st -X,r30
-	ldi r18,lo8(1)
-	ldi r19,0
-	adiw r26,2+1
-	st X,r19
-	st -X,r18
-	sbiw r26,2
-	ldd r24,Y+43
-	ldd r25,Y+44
-	adiw r24,1
-	std Y+38,r25
-	std Y+37,r24
-	std Y+36,r3
-	std Y+35,r2
-	ldi r19,8
-	cp r2,r19
-	cpc r3,__zero_reg__
-	brlt .+2
+	brne .+2
 	rjmp .L53
-.L19:
-	movw r26,r8
-	adiw r26,1
-	st X,__zero_reg__
-	st -X,__zero_reg__
-	ldi r30,lo8(1)
-	ldi r31,0
-	adiw r26,2+1
-	st X,r31
-	st -X,r30
-	sbiw r26,2
-	adiw r24,1
-	std Y+38,r25
-	std Y+37,r24
-	ldi r31,-1
-	sub r12,r31
-	sbc r13,r31
+	ldi r18,lo8(.LC0)
+	ldi r19,hi8(.LC0)
+	movw r30,r6
+	std Z+1,r19
+	st Z,r18
+	ldi r24,lo8(1)
+	ldi r25,0
+	std Z+3,r25
+	std Z+2,r24
+	ldi r25,-1
+	sub r10,r25
+	sbc r11,r25
+	std Y+38,r11
+	std Y+37,r10
 	std Y+36,r13
 	std Y+35,r12
-	ldi r18,8
-	cp r12,r18
+	ldi r30,8
+	cp r12,r30
 	cpc r13,__zero_reg__
 	brlt .+2
-	rjmp .L20
-	movw r30,r8
-	adiw r30,4
-.L22:
-	ldd r20,Y+49
-	ldd r21,Y+50
-	std Z+1,r21
-	st Z,r20
+	rjmp .L54
+.L19:
+	ldd r30,Y+39
+	ldd r31,Y+40
+	std Z+1,__zero_reg__
+	st Z,__zero_reg__
+	ldi r18,lo8(1)
 	ldi r19,0
-	ldi r18,0
 	std Z+3,r19
 	std Z+2,r18
-	movw r26,r18
-	add r26,r24
-	adc r27,r25
-	std Y+44,r27
-	std Y+43,r26
-	std Y+38,r27
-	std Y+37,r26
-	ldi r27,-1
-	sub r12,r27
-	sbc r13,r27
+	ldi r19,-1
+	sub r10,r19
+	sbc r11,r19
+	std Y+38,r11
+	std Y+37,r10
+	ldi r24,-1
+	sub r12,r24
+	sbc r13,r24
 	std Y+36,r13
 	std Y+35,r12
-	ldi r18,8
-	cp r12,r18
+	adiw r30,4
+	ldi r25,8
+	cp r12,r25
 	cpc r13,__zero_reg__
 	brlt .+2
+	rjmp .L55
+.L22:
+	ldd r18,Y+50
+	ldd r19,Y+51
+	std Z+1,r19
+	st Z,r18
+	ldi r25,0
+	ldi r24,0
+	std Z+3,r25
+	std Z+2,r24
+	add r10,r24
+	adc r11,r25
+	std Y+38,r11
+	std Y+37,r10
+	movw r14,r12
+	ldi r19,-1
+	sub r14,r19
+	sbc r15,r19
+	std Y+36,r15
+	std Y+35,r14
+	ldi r24,8
+	cp r14,r24
+	cpc r15,__zero_reg__
+	brlt .+2
 	rjmp .L28
-	movw r20,r30
-	subi r20,-4
-	sbci r21,-1
-	std Y+46,r21
-	std Y+45,r20
-	movw r24,r12
-	adiw r24,1
-	movw r2,r24
-	movw r26,r30
-	adiw r26,8
-	movw r10,r26
+	movw r6,r30
+	ldi r25,4
+	add r6,r25
+	adc r7,__zero_reg__
 	cpi r16,117
 	cpc r17,__zero_reg__
 	breq .+2
-	rjmp .L54
-.L3:
-	cp r4,__zero_reg__
-	cpc r5,__zero_reg__
-	breq .L7
-	ldi r31,8
-	add r14,r31
-	adc r15,__zero_reg__
-	rjmp .L8
-.L52:
-	movw r26,r14
-	ld r18,X+
-	ld r19,X+
-	ld r20,X+
-	ld r21,X
-	std Y+39,r18
-	std Y+40,r19
-	std Y+41,r20
-	std Y+42,r21
-	movw r30,r14
-	adiw r30,8
-	movw r14,r30
-	rjmp .L2
-.L4:
+	rjmp .L56
+.L8:
 	cp r4,__zero_reg__
 	cpc r5,__zero_reg__
-	breq .L9
-	ldi r19,8
-	add r14,r19
-	adc r15,__zero_reg__
-.L8:
-	cp r6,__zero_reg__
-	cpc r7,__zero_reg__
 	brne .+2
 	rjmp .L2
 	rjmp .L33
-.L9:
-	ldi r20,4
-	add r14,r20
-	adc r15,__zero_reg__
-	rjmp .L8
-.L7:
-	ldi r18,4
-	add r14,r18
-	adc r15,__zero_reg__
-	rjmp .L8
+.L49:
+	rjmp .L49
 .L53:
+	ldd r24,Y+43
+	ldd r25,Y+44
+	or r24,r25
+	brne .+2
+	rjmp .L2
+	ldi r30,lo8(-1)
+	ldi r31,lo8(-1)
+	cp __zero_reg__,r30
+	cpc __zero_reg__,r31
+	brlt .+2
+	rjmp .L2
+	sbiw r30,17
+	brge .+2
+	rjmp .L34
+	clr r12
+	dec r12
+	mov r13,r12
+	std Y+39,r2
+	std Y+45,r3
+	std Y+47,r5
+	std Y+46,r4
+	std Y+49,r17
+	std Y+48,r16
+	ldd r17,Y+41
+	ldd r5,Y+42
+	rjmp .L17
+.L15:
+	ldi r31,16
+	sub r12,r31
+	sbc r13,__zero_reg__
+	ldi r18,17
+	cp r12,r18
+	cpc r13,__zero_reg__
+	brlt .L57
+.L17:
+	movw r30,r6
+	std Z+1,r3
+	st Z,r2
+	std Z+3,r9
+	std Z+2,r8
+	ldi r31,16
+	add r10,r31
+	adc r11,__zero_reg__
+	std Y+38,r11
+	std Y+37,r10
+	ldi r18,-1
+	sub r14,r18
+	sbc r15,r18
+	std Y+36,r15
+	std Y+35,r14
+	ldi r24,4
+	add r6,r24
+	adc r7,__zero_reg__
+	ldi r19,8
+	cp r14,r19
+	cpc r15,__zero_reg__
+	brlt .L15
+	movw r22,r28
+	subi r22,-33
+	sbci r23,-1
+	mov r24,r17
+	mov r25,r5
+	call g
+	or r24,r25
+	breq .+2
+	rjmp .L16
+	ldd r10,Y+37
+	ldd r11,Y+38
+	ldd r14,Y+35
+	ldd r15,Y+36
+	movw r30,r28
+	adiw r30,1
+	movw r6,r30
+	ldi r31,16
+	sub r12,r31
+	sbc r13,__zero_reg__
+	ldi r18,17
+	cp r12,r18
+	cpc r13,__zero_reg__
+	brge .L17
+.L57:
+	ldd r4,Y+46
+	ldd r5,Y+47
+	ldd r16,Y+48
+	ldd r17,Y+49
+	ldi r19,-1
+	sub r14,r19
+	sbc r15,r19
+	movw r30,r6
+	movw r24,r6
+	adiw r24,4
+	movw r6,r24
+.L13:
+	ldd r25,Y+39
+	st Z,r25
+	ldd r18,Y+45
+	std Z+1,r18
+	std Z+3,r13
+	std Z+2,r12
+	add r10,r12
+	adc r11,r13
+	std Y+38,r11
+	std Y+37,r10
+	std Y+36,r15
+	std Y+35,r14
+	ldi r19,8
+	cp r14,r19
+	cpc r15,__zero_reg__
+	brge .+2
+	rjmp .L2
+	movw r22,r28
+	subi r22,-33
+	sbci r23,-1
+	ldd r24,Y+41
+	ldd r25,Y+42
+	call g
+	or r24,r25
+	brne .L16
+	ldd r10,Y+37
+	ldd r11,Y+38
+	ldd r14,Y+35
+	ldd r15,Y+36
+	movw r24,r28
+	adiw r24,1
+	movw r6,r24
+	rjmp .L2
+.L54:
 	movw r22,r28
 	subi r22,-33
 	sbci r23,-1
-	ldd r24,Y+47
-	ldd r25,Y+48
+	ldd r24,Y+41
+	ldd r25,Y+42
 	call g
 	or r24,r25
 	brne .L16
-	ldd r24,Y+37
-	ldd r25,Y+38
+	ldd r10,Y+37
+	ldd r11,Y+38
 	ldd r12,Y+35
 	ldd r13,Y+36
-	movw r20,r28
-	subi r20,-1
-	sbci r21,-1
-	movw r8,r20
+	movw r18,r28
+	subi r18,-1
+	sbci r19,-1
+	std Y+40,r19
+	std Y+39,r18
 	rjmp .L19
-.L20:
+.L55:
 	movw r22,r28
 	subi r22,-33
 	sbci r23,-1
-	ldd r24,Y+47
-	ldd r25,Y+48
+	ldd r24,Y+41
+	ldd r25,Y+42
 	call g
 	or r24,r25
 	brne .L16
-	ldd r24,Y+37
-	ldd r25,Y+38
+	ldd r10,Y+37
+	ldd r11,Y+38
 	ldd r12,Y+35
 	ldd r13,Y+36
 	movw r30,r28
@@ -283,35 +363,24 @@
 	movw r22,r28
 	subi r22,-33
 	sbci r23,-1
-	ldd r24,Y+47
-	ldd r25,Y+48
+	ldd r24,Y+41
+	ldd r25,Y+42
 	call g
 	or r24,r25
 	brne .L16
-	ldd r30,Y+37
-	ldd r31,Y+38
-	std Y+44,r31
-	std Y+43,r30
-	ldd r12,Y+35
-	ldd r13,Y+36
-	movw r18,r28
-	subi r18,-1
-	sbci r19,-1
-	std Y+46,r19
-	std Y+45,r18
-	movw r20,r12
-	subi r20,-1
-	sbci r21,-1
-	movw r2,r20
-	movw r24,r28
-	adiw r24,5
-	movw r10,r24
+	ldd r10,Y+37
+	ldd r11,Y+38
+	ldd r14,Y+35
+	ldd r15,Y+36
+	movw r30,r28
+	adiw r30,1
+	movw r6,r30
 	rjmp .L2
 .L16:
 	ldi r25,0
 	ldi r24,0
 /* epilogue start */
-	adiw r28,50
+	adiw r28,51
 	in __tmp_reg__,__SREG__
 	cli
 	out __SP_H__,r29
@@ -336,6 +405,17 @@
 	pop r3
 	pop r2
 	ret
+.L34:
+	movw r14,r12
+	movw r30,r6
+	ldd r6,Y+39
+	ldd r7,Y+40
+	clr r12
+	dec r12
+	mov r13,r12
+	std Y+39,r2
+	std Y+45,r3
+	rjmp .L13
 	.size	f, .-f
 	.local	zeroes.0
 	.comm	zeroes.0,16,1
