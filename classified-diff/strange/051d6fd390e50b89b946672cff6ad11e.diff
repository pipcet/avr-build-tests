DIR 1b65fd7fb8b4af2a45d075c06c7a1117
--- 920726-1.c.{atmega128}.{3}.{vanilla}.s	2020-08-07 12:00:56.315632615 +0000
+++ 920726-1.c.{atmega128}.{3}.{lra}.s	2020-08-07 12:00:58.895727532 +0000
@@ -33,22 +33,19 @@
 	ldd r17,Y+14
 	ldd r30,Y+15
 	ldd r31,Y+16
-	movw r12,r28
+	movw r10,r28
 	ldi r24,17
-	add r12,r24
-	adc r13,__zero_reg__
+	add r10,r24
+	adc r11,__zero_reg__
 	ld r24,Z
 	tst r24
-	brne .+2
-	rjmp .L7
+	breq .L7
+	adiw r30,1
 	movw r14,r30
-	ldi r25,-1
-	sub r14,r25
-	sbc r15,r25
 	ldi r25,lo8(.LC0)
-	mov r10,r25
+	mov r12,r25
 	ldi r25,hi8(.LC0)
-	mov r11,r25
+	mov r13,r25
 	cpi r24,lo8(105)
 	breq .L12
 .L3:
@@ -64,16 +61,16 @@
 	cpi r24,lo8(105)
 	brne .L3
 .L12:
-	movw r30,r12
+	movw r30,r10
+	ldi r24,2
+	add r10,r24
+	adc r11,__zero_reg__
 	ldd r24,Z+1
-	ldi r26,2
-	add r12,r26
-	adc r13,__zero_reg__
 	push r24
 	ld r24,Z
 	push r24
-	push r11
-	push r10
+	push r13
+	push r12
 	push r17
 	push r16
 	call sprintf
@@ -137,22 +134,19 @@
 	ldd r17,Y+14
 	ldd r30,Y+15
 	ldd r31,Y+16
-	movw r12,r28
+	movw r10,r28
 	ldi r24,17
-	add r12,r24
-	adc r13,__zero_reg__
+	add r10,r24
+	adc r11,__zero_reg__
 	ld r24,Z
 	tst r24
-	brne .+2
-	rjmp .L19
+	breq .L19
+	adiw r30,1
 	movw r14,r30
-	ldi r25,-1
-	sub r14,r25
-	sbc r15,r25
 	ldi r25,lo8(.LC0)
-	mov r10,r25
+	mov r12,r25
 	ldi r25,hi8(.LC0)
-	mov r11,r25
+	mov r13,r25
 	cpi r24,lo8(105)
 	breq .L23
 .L15:
@@ -168,16 +162,16 @@
 	cpi r24,lo8(105)
 	brne .L15
 .L23:
-	movw r30,r12
+	movw r30,r10
+	ldi r24,2
+	add r10,r24
+	adc r11,__zero_reg__
 	ldd r24,Z+1
-	ldi r26,2
-	add r12,r26
-	adc r13,__zero_reg__
 	push r24
 	ld r24,Z
 	push r24
-	push r11
-	push r10
+	push r13
+	push r12
 	push r17
 	push r16
 	call sprintf
@@ -253,8 +247,8 @@
 	push r17
 	push r16
 	movw r14,r28
-	ldi r18,101
-	add r14,r18
+	ldi r24,101
+	add r14,r24
 	adc r15,__zero_reg__
 	push r15
 	push r14
@@ -270,39 +264,31 @@
 	push r25
 	push r24
 	call second
-	in __tmp_reg__,__SREG__
-	cli
-	out __SP_H__,r29
-	out __SREG__,__tmp_reg__
-	out __SP_L__,r28
-	movw r26,r14
-	ld r24,X+
-	ld r25,X
-	cpi r24,53
-	sbci r25,32
-	breq .L31
-.L25:
-	ldi r24,lo8(1)
-	ldi r25,0
-.L26:
-	or r24,r25
-	brne .L27
-	ldd r24,Y+1
-	ldd r25,Y+2
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	pop __tmp_reg__
+	movw r30,r14
+	ld r24,Z
+	ldd r25,Z+1
 	cpi r24,53
 	sbci r25,32
 	breq .L32
-.L28:
-	ldi r24,lo8(1)
-	ldi r25,0
-.L29:
-	or r24,r25
-	brne .L27
-	ldi r25,0
-	ldi r24,0
-	call exit
-.L31:
-	movw r30,r14
+.L27:
+	call abort
+.L32:
 	adiw r30,2
 	movw r26,r14
 	adiw r26,2
@@ -310,29 +296,28 @@
 	ld r25,X
 	cpi r24,50
 	sbci r25,48
-	brne .L25
+	brne .L27
 	ldd r24,Z+2
 	ldd r25,Z+3
 	sbiw r24,32
-	brne .L25
-	ldi r25,0
-	ldi r24,0
-	rjmp .L26
-.L32:
+	brne .L27
+	ldd r24,Y+1
+	ldd r25,Y+2
+	cpi r24,53
+	sbci r25,32
+	brne .L27
 	ldd r24,Y+3
 	ldd r25,Y+4
 	cpi r24,50
 	sbci r25,48
-	brne .L28
+	brne .L27
 	ldd r24,Y+5
 	ldd r25,Y+6
 	sbiw r24,32
-	brne .L28
+	brne .L27
 	ldi r25,0
 	ldi r24,0
-	rjmp .L29
-.L27:
-	call abort
+	call exit
 	.size	main, .-main
-	.ident	"GCC: (GNU) 11.0.0 20200802 (experimental)"
+	.ident	"GCC: (GNU) 11.0.0 20200804 (experimental)"
 .global __do_copy_data
