--- pr33855.c.{atmega128}.{s}.{vanilla}.s	2020-08-05 16:12:18.149314334 +0000
+++ pr33855.c.{atmega128}.{s}.{ccmode}.s	2020-08-05 16:12:17.797310681 +0000
@@ -52,79 +52,50 @@
 	push r29
 	in r28,__SP_L__
 	in r29,__SP_H__
-	sbiw r28,19
+	sbiw r28,17
 	in __tmp_reg__,__SREG__
 	cli
 	out __SP_H__,r29
 	out __SREG__,__tmp_reg__
 	out __SP_L__,r28
 /* prologue: function */
-/* frame size = 19 */
-/* stack size = 37 */
-.L__stack_usage = 37
-	std Y+5,r24
-	std Y+6,r25
-	std Y+7,r22
-	std Y+8,r23
-	std Y+12,r16
-	std Y+13,r17
-	std Y+14,r18
-	std Y+15,r19
-	lds r24,vsorc+2
-	lds r25,vsorc+2+1
-	sbiw r24,1
+/* frame size = 17 */
+/* stack size = 35 */
+.L__stack_usage = 35
+	std Y+5,r22
+	std Y+6,r23
+	std Y+10,r16
+	std Y+11,r17
+	std Y+12,r18
+	std Y+13,r19
+	lds r18,vsorc+2
+	lds r19,vsorc+2+1
+	subi r18,1
+	sbc r19,__zero_reg__
 	ldi r26,4
 	1:
-	lsl r24
-	rol r25
+	lsl r18
+	rol r19
 	dec r26
 	brne 1b
-	lds r18,vsorc+4
-	lds r19,vsorc+4+1
-	add r18,r24
-	adc r19,r25
-	std Y+17,r19
-	std Y+16,r18
-.L3:
+	lds r20,vsorc+4
+	lds r21,vsorc+4+1
+	add r20,r18
+	adc r21,r19
+	std Y+15,r21
+	std Y+14,r20
+	or r24,r25
+	breq .+2
+	rjmp .L10
+.L6:
 	ldd r24,Y+5
 	ldd r25,Y+6
 	or r24,r25
 	breq .L6
-/* epilogue start */
-	adiw r28,19
-	in __tmp_reg__,__SREG__
-	cli
-	out __SP_H__,r29
-	out __SREG__,__tmp_reg__
-	out __SP_L__,r28
-	pop r29
-	pop r28
-	pop r17
-	pop r16
-	pop r15
-	pop r14
-	pop r13
-	pop r12
-	pop r11
-	pop r10
-	pop r9
-	pop r8
-	pop r7
-	pop r6
-	pop r5
-	pop r4
-	pop r3
-	pop r2
-	ret
-.L6:
-	ldd r24,Y+7
-	ldd r25,Y+8
-	or r24,r25
-	breq .L3
-	ldd r22,Y+12
-	ldd r23,Y+13
-	ldd r24,Y+14
-	ldd r25,Y+15
+	ldd r22,Y+10
+	ldd r23,Y+11
+	ldd r24,Y+12
+	ldd r25,Y+13
 	call __floatsisf
 	movw r14,r22
 	movw r16,r24
@@ -153,8 +124,8 @@
 	movw r4,r20
 	movw r6,r22
 	movw r8,r24
-	ldd r30,Y+16
-	ldd r31,Y+17
+	ldd r30,Y+14
+	ldd r31,Y+15
 	st Z,r18
 	std Z+1,r3
 	std Z+2,r20
@@ -172,37 +143,28 @@
 	ldd r24,Y+3
 	ldd r25,Y+4
 	call __extendsfdf2
-	mov r27,r18
-	mov r26,r19
-	std Y+18,r20
-	std Y+19,r21
+	std Y+16,r20
+	std Y+17,r21
 	std Y+1,r22
-	std Y+9,r23
-	std Y+10,r24
-	std Y+11,r25
-	ldd r30,Y+16
-	ldd r31,Y+17
+	std Y+7,r23
+	std Y+8,r24
+	std Y+9,r25
+	ldd r30,Y+14
+	ldd r31,Y+15
 	std Z+8,r18
 	std Z+9,r19
 	std Z+10,r20
 	std Z+11,r21
-	mov r24,r22
 	std Z+12,r22
-	mov r25,r23
 	std Z+13,r23
-	ldd r18,Y+10
-	std Z+14,r18
-	ldd r19,Y+11
-	std Z+15,r19
+	std Z+14,r24
+	std Z+15,r25
 	movw r10,r2
 	movw r12,r4
 	movw r14,r6
 	movw r16,r8
-	mov r18,r27
-	mov r19,r26
-	movw r22,r24
-	ldd r24,Y+10
-	ldd r25,Y+11
+	ldd r20,Y+16
+	ldd r21,Y+17
 	call cabsl
 	mov r10,__zero_reg__
 	mov r11,__zero_reg__
@@ -217,18 +179,45 @@
 	call __ltdf2
 	tst r24
 	brne .+2
-	rjmp .L3
+	rjmp .L6
 	ldi r24,lo8(16)
 	ldi r30,lo8(.LC0)
 	ldi r31,hi8(.LC0)
-	ldd r26,Y+16
-	ldd r27,Y+17
+	ldd r26,Y+14
+	ldd r27,Y+15
 	0:
 	ld r0,Z+
 	st X+,r0
 	dec r24
 	brne 0b
-	rjmp .L3
+	rjmp .L6
+.L10:
+/* epilogue start */
+	adiw r28,17
+	in __tmp_reg__,__SREG__
+	cli
+	out __SP_H__,r29
+	out __SREG__,__tmp_reg__
+	out __SP_L__,r28
+	pop r29
+	pop r28
+	pop r17
+	pop r16
+	pop r15
+	pop r14
+	pop r13
+	pop r12
+	pop r11
+	pop r10
+	pop r9
+	pop r8
+	pop r7
+	pop r6
+	pop r5
+	pop r4
+	pop r3
+	pop r2
+	ret
 	.size	foo, .-foo
 .global	vsorc
 	.section .bss
