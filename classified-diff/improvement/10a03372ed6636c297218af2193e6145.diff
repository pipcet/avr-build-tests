DIR 8b04f5c72d0a223585e5a96a49d819b9
--- pr90949.c.{atmega128}.{2}.{vanilla}.s	2020-08-05 18:51:04.605327833 +0000
+++ pr90949.c.{atmega128}.{2}.{ccmode}.s	2020-08-05 18:51:04.133321237 +0000
@@ -63,37 +63,27 @@
 	push r17
 	push r28
 	push r29
-	rcall .
-	rcall .
-	in r28,__SP_L__
-	in r29,__SP_H__
 /* prologue: function */
-/* frame size = 4 */
-/* stack size = 22 */
-.L__stack_usage = 22
+/* frame size = 0 */
+/* stack size = 18 */
+.L__stack_usage = 18
 	movw r2,r24
-	movw r6,r22
-	or r24,r25
+	movw r24,r22
+	cp r2,__zero_reg__
+	cpc r3,__zero_reg__
 	brne .+2
 	rjmp .L5
-.L6:
-	cp r6,__zero_reg__
-	cpc r7,__zero_reg__
+	sbiw r24,0
 	brne .+2
-	rjmp .L102
+	rjmp .L88
 	movw r30,r2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+4,r31
-	std Y+3,r30
-	or r30,r31
+	ld r28,Z
+	ldd r29,Z+1
+	sbiw r28,0
 	brne .+2
 	rjmp .L11
-	ldd r30,Y+3
-	ldd r31,Y+4
-	ld r16,Z
-	ldd r17,Z+1
+	ld r16,Y
+	ldd r17,Y+1
 	cp r16,__zero_reg__
 	cpc r17,__zero_reg__
 	brne .+2
@@ -129,21 +119,17 @@
 	cpc r5,__zero_reg__
 	breq .L17
 	movw r30,r4
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
+	ld r6,Z
+	ldd r7,Z+1
+	cp r6,__zero_reg__
+	cpc r7,__zero_reg__
 	breq .L13
-	movw r22,r6
-	ldd r30,Y+1
-	ldd r31,Y+2
+	movw r22,r24
+	movw r30,r6
 	ld r24,Z
 	ldd r25,Z+1
 	call walk
-	ldd r24,Y+1
-	ldd r25,Y+2
+	movw r24,r6
 	call my_free
 .L13:
 	movw r24,r4
@@ -164,16 +150,11 @@
 	movw r24,r16
 	call my_free
 .L31:
-	ldd r24,Y+3
-	ldd r25,Y+4
+	movw r24,r28
 	call my_free
 .L11:
 	movw r24,r2
 /* epilogue start */
-	pop __tmp_reg__
-	pop __tmp_reg__
-	pop __tmp_reg__
-	pop __tmp_reg__
 	pop r29
 	pop r28
 	pop r17
@@ -193,144 +174,104 @@
 	pop r3
 	pop r2
 	jmp my_free
-.L102:
+.L86:
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	movw r30,r2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
-	brne .L86
-.L5:
-/* epilogue start */
-	pop __tmp_reg__
-	pop __tmp_reg__
-	pop __tmp_reg__
-	pop __tmp_reg__
-	pop r29
-	pop r28
-	pop r17
-	pop r16
-	pop r15
-	pop r14
-	pop r13
-	pop r12
-	pop r11
-	pop r10
-	pop r9
-	pop r8
-	pop r7
-	pop r6
-	pop r5
-	pop r4
-	pop r3
-	pop r2
-	ret
-.L86:
+	ld __tmp_reg__,Y+
+	ld r29,Y
+	mov r28,__tmp_reg__
+	sbiw r28,0
+	brne .+2
+	rjmp .L5
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	ldd r30,Y+1
-	ldd r31,Y+2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
-	breq .L5
+	ld __tmp_reg__,Y+
+	ld r29,Y
+	mov r28,__tmp_reg__
+	sbiw r28,0
+	brne .+2
+	rjmp .L5
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	ldd r30,Y+1
-	ldd r31,Y+2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
+	ld __tmp_reg__,Y+
+	ld r29,Y
+	mov r28,__tmp_reg__
+	sbiw r28,0
 	breq .L5
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	ldd r30,Y+1
-	ldd r31,Y+2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
+	ld __tmp_reg__,Y+
+	ld r29,Y
+	mov r28,__tmp_reg__
+	sbiw r28,0
 	breq .L5
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	ldd r30,Y+1
-	ldd r31,Y+2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
-	brne .+2
-	rjmp .L5
+	ld __tmp_reg__,Y+
+	ld r29,Y
+	mov r28,__tmp_reg__
+	sbiw r28,0
+	breq .L5
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	ldd r30,Y+1
-	ldd r31,Y+2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
-	brne .+2
-	rjmp .L5
+	ld __tmp_reg__,Y+
+	ld r29,Y
+	mov r28,__tmp_reg__
+	sbiw r28,0
+	breq .L5
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	ldd r30,Y+1
-	ldd r31,Y+2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
-	brne .+2
-	rjmp .L5
+	ld __tmp_reg__,Y+
+	ld r29,Y
+	mov r28,__tmp_reg__
+	sbiw r28,0
+	breq .L5
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	ldd r30,Y+1
-	ldd r31,Y+2
-	ld __tmp_reg__,Z+
-	ld r31,Z
-	mov r30,__tmp_reg__
-	std Y+2,r31
-	std Y+1,r30
-	or r30,r31
-	brne .+2
-	rjmp .L5
+	ld r2,Y
+	ldd r3,Y+1
+	cp r2,__zero_reg__
+	cpc r3,__zero_reg__
+	breq .L5
+.L88:
 	ldi r24,lo8(.LC0)
 	ldi r25,hi8(.LC0)
 	call my_puts
-	ldd r30,Y+1
-	ldd r31,Y+2
-	ld r2,Z
-	ldd r3,Z+1
-	cp r2,__zero_reg__
-	cpc r3,__zero_reg__
+	movw r30,r2
+	ld r28,Z
+	ldd r29,Z+1
+	sbiw r28,0
 	breq .+2
-	rjmp .L6
-	rjmp .L5
+	rjmp .L86
+.L5:
+/* epilogue start */
+	pop r29
+	pop r28
+	pop r17
+	pop r16
+	pop r15
+	pop r14
+	pop r13
+	pop r12
+	pop r11
+	pop r10
+	pop r9
+	pop r8
+	pop r7
+	pop r6
+	pop r5
+	pop r4
+	pop r3
+	pop r2
+	ret
 	.size	walk, .-walk
 	.section	.text.startup,"ax",@progbits
 .global	main
